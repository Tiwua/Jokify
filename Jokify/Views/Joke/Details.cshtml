@model JokeDetailsViewModel

@{
    ViewBag.Title = "Joke Details";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<style>
    .container {
        position: absolute;
        width: 600px;
        height: auto;
        left: 655px;
        top: 150px;
        right: 120px;
        background-color: #f2f2f2;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
        margin-bottom: 10px; 
        z-index: 9999;
    }

        .container:hover {
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .container textarea {
            resize: none; /* Prevent resizing of the textarea */
        }

        .container-wrapper {
        position: fixed;
        top: 50px; /* Adjust as needed */
        left: 50px; /* Adjust as needed */
        }

    .details-button {
        position: absolute;
        bottom: 20px;
        right: 20px;
        padding: 8px 16px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .container:hover .details-button {
        opacity: 1;
    }

    .joke-container {
        max-width: 500px;
        height: auto;
        margin: 0 auto;
        padding: 20px;
        background-color: #f2f2f2;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.8);
    }

    h2 {
        font-size: 24px;
        margin-bottom: 10px;
    }

    .setup {
        font-weight: bold;
        margin-bottom: 10px;
    }

    .punchline {
        font-style: italic;
        margin-bottom: 20px;
    }

    button {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
        margin-top: 10px;
    }

    .edit-button {
        background-color: #4CAF50;
        color: white;
        margin-right: 10px;
    }
    .edit-button:hover {
            background-color: #ff4b2b;
            transform: scale(1.1);
        }

    .delete-button {
        background-color: #ff4b2b;
        color: white;
    }

    .like-button {
        background-color: #4CAF50;
        color: white;
    }

        .like-button:hover {
            background-color: #ff4b2b;
            transform: scale(1.1);
        }

    .dislike-button {
        background-color: #ff4b2b;
        color: white;
    }

        .dislike-button:hover {
            background-color: #4CAF50;
            color: white;
            transform: scale(1.1);
        }

    .likes {
        font-size: 25px;
        position: relative;
        left: 400px;
        top: 35px;
        align-items: center;
    }

    .fixted-elements {
        position: fixed;
        top: 250px; /* Adjust as needed */
        right: 900px; /* Adjust as needed */
        /* Additional styles for the fixed elements */
    }

        .likes i {
            color: #FF0000;
            margin-right: 5px;
        }

    .likes-count {
        font-size: 20px;
    }

    .arrow-box-disabled {
        display: none;
    }

    .arrow-box {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 45px;
        height: 35px;
        background-color: #ff4b2b;
        padding: 10px;
        transition: transform 0.3s ease;
        border-radius: 10px;
    }

    .arrow {
        color: white;
        position: absolute;
        width: 20px;
        height: 20px;
        transition: transform 0.3s ease;
        font-weight: 900;
        font-size: 25px;
        line-height: 0.5;
    }

        .arrow::before,
        .arrow::after {
            position: absolute;
            width: 10px;
            height: 2px;
        }

    .button-left::before,
    .button-left::after,
    .button-right::before,
    .button-right::after {
        background-color: #fff;
    }

    .button-left::before {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-45deg);
    }

    .button-left::after {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(45deg);
    }

    .button-right::before {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(135deg);
    }

    .button-right::after {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-135deg);
    }

    .arrow-box:hover {
        transform: scale(1.1);
    }

    .arrow:hover {
        transform: scale(1.1);
    }

    .right {
        position: absolute;
        top: 20px;
        left: 430px;
    }

    .left {
        position: absolute;
        top: 20px;
        left: 370px;
    }

    .comment-section {
        position: relative;
        top: 20px;
        max-width: 500px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f2f2f2;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 1, 1, 0.8);
        margin-bottom: 40px;
    }

    .comment {
        margin-bottom: 25px; /* Add space between comments */
        margin-top: 10px; /* Add space above comment content */
        text-align: center; /* Center-align the comment content */
        box-shadow: 0 2px 5px rgba(0, 1, 1, 0.3);
    }

    .comment-content {
        margin-bottom: 20px; /* Add space between comment content and comment author */
    }

    .comment-author {
        font-weight: bold; /* Apply different styling to comment author */
        margin-top: 30px; /* Add space above comment content */
        text-align: center; /* Center-align the comment content */
    }

    .text-center {
        text-align: center;
    }

    .comment-button {
        background-color: #ff4b2b;
        color: white;
    }

        .comment-button:hover {
            background-color: #4CAF50;
            color: white;
            transform: scale(1.1);
        }
        .form-control{
            width: 461px;
        }

    .edit-comment-button {
        position: static;
        top: 35px;
        left: 85px;
        opacity: 0;
        transition: opacity 0.3s ease;
        visibility: hidden;
        color: black;
    }

        .edit-comment-button:hover {
            color: #ff4b2b;
        }

    .comment:hover .edit-comment-button {
        visibility: visible;
        opacity: 1;
    }


    a{

    display: block;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    }

</style>

<h2 class="text-center">@ViewBag.Title</h2>
<div class="joke-container" data-id="@Model.Id">
    
    <h2>@Model.Title</h2>
    <p class="setup">@Model.Setup</p>
    <p class="punchline">@Model.Punchline</p>
    <div id="likes" class="likes">
    <div class="fixed-elements">
        <i class="fas fa-heart"></i>
        <span class="likes-count">@Model.LikesCount</span>
    </div>
    </div>
    @if (User.Identity.IsAuthenticated && User.Identity.Name == Model.OwnerName)
    {
        <form method="get">

        <button class="edit-button" asp-controller="Joke" asp-action="Edit"
       asp-route-id="@Model.Id">Edit</button>
        </form>

        <form method="post" asp-controller="Joke"
          asp-action="Delete"
          asp-route-id="@Model.Id"
          asp-route-title="@Model.Title"
          asp-route-page="@Model.CurrentPage">

            <button type="submit" class="dislike-button">Delete</button>
        </form>
    }
    else
    {
        if (Model.HasLiked)
        {
            <form method="post" asp-controller="Joke"
          asp-action="Dislike"
          asp-route-id="@Model.Id"
          asp-route-title="@Model.Title"
          asp-route-page="@Model.CurrentPage">

                <button type="submit" class="dislike-button">Just Kidding</button>
            </form>
        }
        else
        {
            <form method="post" asp-controller="Joke"
          asp-action="Like"
          asp-route-id="@Model.Id"
          asp-route-title="@Model.Title"
          asp-route-page="@Model.CurrentPage">

                <button type="submit" class="like-button">Like</button>
            </form>

        }
    }
</div>

<div class="comment-section">
    <h2>Comments</h2>



    @if (Model.Comments.Count == 0)
    {
        <p>No comments yet.</p>
    }
    else
    {
        foreach (var comment in Model.Comments)
        {
            {
                // Declare variables within the foreach loop
                var stringDate = comment.CreatedOn;
                var date = DateTime.Parse(stringDate).Hour;
                var now = DateTime.Now.Hour;

                if (now > 24)
                {
                    <div class="comment">
                        <p class="comment-content">@comment.Content</p>
                        <span class="comment-author">Posted by @comment.User on @comment.CreatedOn</span>
                    </div>
                }
                else
                {
                    <div class="comment">
                        <p>@comment.Content</p>
                        <span class="comment-author">Posted by @comment.User @now hours ago</span>
                    @if (User.Identity.IsAuthenticated && User.Identity.Name == comment.User)
                    {
                            <a class="edit-comment-button" asp-controller="Joke" asp-action="Edit"
                            asp-route-id="@Model.Id">
                                   Edit
                            </a>
                        }

                    </div>

                }
            }
        }
    }

    <form method="post" asp-controller="Joke"
          asp-action="AddComment"
          asp-route-title="@Model.Title"
          asp-route-page="@Model.CurrentPage">

        <h3>Add a Comment</h3>
        <textarea class="form-control" asp-for="@Model.CommentContent" rows="3"></textarea>
        <span asp-validation-for="@Model.CommentContent" class="text-danger"></span>
        <button type="submit" class="comment-button">Post Comment</button>
    </form>
    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        var maxPage = Math.Ceiling((double)Model.TotalComments /
        Model.PageSize);
    }

    @{
        var prevPageButtonStatus = Model.CurrentPage == 1 ? "disabled" : string.Empty;
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Comments.Any();
    }

    <div class="left">
        <a class="arrow-box@(Model.CurrentPage == 1 ? "-disabled" : string.Empty)"
           asp-controller="Joke"
           asp-action="Details"
           asp-route-page="@previousPage">
            <span class="arrow button-left">
                &larr;
            </span>
        </a>
    </div>


    <div class="right">
        <a class="arrow-box@(shouldButtonBeDisabled ? "-disabled" : string.Empty)"
           asp-controller="Joke"
           asp-action="Details"
           asp-route-page="@(Model.CurrentPage + 1)">
            <span class="arrow button-right">
                &rarr;
            </span>
        </a>
    </div>
</div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js" ></script>
           <script>
    $(document).ready(function () {
        $('.dislike-button').on('click', function () {
            var jokeContainer = $(this).closest('.joke');
            var id = $(this).closest('.joke-container').data('id');
            var likesContainer = jokeContainer.find('.likes-count');

            // Perform AJAX request to update dislike count on the server
            $.ajax({
                url: 'api/statistics/' + id, // Replace with your server-side endpoint
                method: 'POST',
                data: { id: id }, // Pass any necessary data (e.g., post ID)
                success: function (response) {
                    // Update the dislike count on the page
                    likesContainer.text(parseInt(likesContainer.text()) - 1);
                },
                error: function () {
                    console.log('Error occurred while disliking the post.');
                }
            });
        });
    });
           </script>