@model JokeDetailsViewModel

@{
    ViewBag.Title = "Joke Details";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<style>
    .container {
        position: absolute;
        width: 600px;
        height: auto;
        left: 655px;
        top: 150px;
        right: 120px;
        background-color: #f2f2f2;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
        margin-bottom: 10px;
        z-index: 9999;
    }

        .container:hover {
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .container textarea {
            resize: none; /* Prevent resizing of the textarea */
        }

    .container-wrapper {
        position: fixed;
        top: 50px; /* Adjust as needed */
        left: 50px; /* Adjust as needed */
    }

    .details-button {
        position: absolute;
        bottom: 20px;
        right: 20px;
        padding: 8px 16px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .container:hover .details-button {
        opacity: 1;
    }

    .joke-container {
        max-width: 500px;
        height: auto;
        margin: 0 auto;
        padding: 20px;
        background-color: #f2f2f2;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.8);
    }

    h2 {
        font-size: 24px;
        margin-bottom: 10px;
    }

    .setup {
        font-weight: bold;
        margin-bottom: 10px;
    }

    .punchline {
        font-style: italic;
        margin-bottom: 20px;
    }

    button {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
        margin-top: 10px;
    }

    .edit-button {
        background-color: #4CAF50;
        color: white;
        margin-right: 10px;
    }

        .edit-button:hover {
            background-color: #ff4b2b;
            transform: scale(1.1);
        }

    .delete-joke-button {
        font-size: 18px;
        background-color: #007bff;
        color: #fff;
        width: 70px;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 3px;
        margin-right: 5px;
        margin-left: 15px;
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .delete-joke-button:hover{
            background-color: #ff4b2b;
            transform: scale(1.1);
    }

    .like-button {
        background-color: #4CAF50;
        color: white;
    }

        .like-button:hover {
            background-color: #ff4b2b;
            transform: scale(1.1);
        }

    .dislike-button {
        background-color: #ff4b2b;
        color: white;
    }

        .dislike-button:hover {
            background-color: #4CAF50;
            color: white;
            transform: scale(1.1);
        }

    .likes {
        font-size: 25px;
        position: relative;
        left: 400px;
        top: 35px;
        align-items: center;
    }

    .likes i {
        color: #FF0000;
        margin-right: 5px;
    }

    .likes-count {
        font-size: 20px;
    }

    .arrow-box-disabled {
        display: none;
    }

    .arrow-box {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 45px;
        height: 35px;
        background-color: #ff4b2b;
        padding: 10px;
        transition: transform 0.3s ease;
        border-radius: 10px;
    }

    .arrow {
        color: white;
        position: absolute;
        width: 20px;
        height: 20px;
        transition: transform 0.3s ease;
        font-weight: 900;
        font-size: 25px;
        line-height: 0.5;
    }

        .arrow::before,
        .arrow::after {
            position: absolute;
            width: 10px;
            height: 2px;
        }

    .button-left::before,
    .button-left::after,
    .button-right::before,
    .button-right::after {
        background-color: #fff;
    }

    .button-left::before {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-45deg);
    }

    .button-left::after {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(45deg);
    }

    .button-right::before {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(135deg);
    }

    .button-right::after {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-135deg);
    }

    .arrow-box:hover {
        transform: scale(1.1);
    }

    .arrow:hover {
        transform: scale(1.1);
    }

    .right {
        position: absolute;
        top: 20px;
        left: 430px;
    }

    .left {
        position: absolute;
        top: 20px;
        left: 370px;
    }

    .comment-section {
        position: relative;
        top: 20px;
        max-width: 500px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f2f2f2;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 1, 1, 0.8);
        margin-bottom: 40px;
    }

    .comment {
        margin-bottom: 25px;
        margin-top: 10px;
        text-align: center;
        box-shadow: 0 2px 5px rgba(0, 1, 1, 0.3);
    }

    .comment-content {
        margin-bottom: 20px;
    }

    .comment-author {
        font-weight: bold;
        margin-top: 30px;
        text-align: center;
    }

    .text-center {
        text-align: center;
    }

    .comment-button {
        background-color: #ff4b2b;
        color: white;
    }

        .comment-button:hover {
            background-color: #4CAF50;
            color: white;
            transform: scale(1.1);
        }

    .form-control {
        width: 461px;
    }

    .comment:hover .edit-comment-button {
        visibility: visible;
        opacity: 1;
    }


    a {
        display: block;
    }

    .edit-button {
        font-size: 18px;
        background-color: #007bff;
        color: #fff;
        width: 70px;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 3px;
        margin-right: 5px;
        margin-left: 15px;
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .edit-form {
        display: flex;
        flex-direction: column;
        margin-top: 10px;
    }

        .edit-form textarea {
            resize: vertical;
            padding: 5px;
            margin-bottom: 5px;
        }

        .edit-form button {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            border-radius: 3px;
            margin-right: 5px;
        }

    .cancel-button {
        font-size: 18px;
        background-color: #007bff;
        color: #fff;
        width: 70px;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 3px;
        margin-right: 5px;
        margin-top: 10px;
        margin-left: 15px;
    }

        .cancel-button:hover {
            background-color: #ff4b2b;
            transform: scale(1.1);
        }

    .save-button {
        font-size: 18px;
        background-color: #007bff;
        color: #fff;
        width: 70px;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 3px;
        margin-right: 5px;
        margin-bottom: 10px;
        margin-left: 15px;
    }

        .save-button:hover {
            background-color: #ff4b2b;
            transform: scale(1.1);
        }

    form.edit-form textarea.comment-content {
        resize: none;
        margin-left: 15px;
        margin-right: 15px;
    }

    .delete-comment-button {
        background-color: #007bff;
        color: #fff;
        width: 70px;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 3px;
        margin-right: 5px;
        margin-top: 10px;
        margin-bottom: 10px;
        margin-left: 35px;
        position: relative;
        right: 195px;
        font-size: 18px;
    }

    .delete-comment-button:hover {
            background-color: #ff4b2b;
            transform: scale(1.1);
        }

    .edited-label {
        color: #999;
        font-size: 12px;
        position:relative;
        left: 200px;
    }

    .edited-joke-label {
        color: #999;
        font-size: 12px;
        position: relative;
        left: 420px;
        bottom: 45px;
    }
    .save-button.disabled {
        /* Your styles to visually indicate the button is disabled */
        opacity: 0.6; /* Example: reduce opacity */
        cursor: not-allowed; /* Example: change cursor style */
    }

</style>

<h2 class="text-center">@ViewBag.Title</h2>
<div class="joke-container" data-id="@Model.Id">

    <h2>@Model.Title</h2>
    @if (@Model.IsEdited)
    {
        <span class="edited-joke-label">(edited)</span>
    }
    <p class="setup">@Model.Setup</p>
    <p class="punchline">@Model.Punchline</p>
    <div id="likes" class="likes">
        <div class="fixed-elements">
            <i class="fas fa-heart"></i>
            <span class="likes-count">@Model.LikesCount</span>
        </div>
    </div>
    @if (User.Identity.IsAuthenticated && User.Identity.Name == Model.OwnerName)
    {
        <form method="get">

            <button class="edit-button" asp-controller="Joke" asp-action="Edit"
                asp-route-id="@Model.Id"
                asp-route-title="@Model.Title"
                asp-route-page="@Model.CurrentPage">
                Edit
            </button>
        </form>

        <form method="post" asp-controller="Joke"
          asp-action="Delete"
          asp-route-id="@Model.Id"
          asp-route-title="@Model.Title"
          asp-route-page="@Model.CurrentPage">

            <button type="submit" class="delete-joke-button">Delete</button>
        </form>
    }
    else
    {
        if (Model.HasLiked)
        {
            <form method="post" asp-controller="Joke"
          asp-action="Dislike"
          asp-route-id="@Model.Id"
          asp-route-title="@Model.Title"
          asp-route-page="@Model.CurrentPage">

                <button type="submit" class="dislike-button">Just Kidding</button>
            </form>
        }
        else
        {
            <form method="post" asp-controller="Joke"
          asp-action="Like"
          asp-route-id="@Model.Id"
          asp-route-title="@Model.Title"
          asp-route-page="@Model.CurrentPage">

                <button type="submit" class="like-button">Like</button>
            </form>

        }
    }
</div>
<div class="comment-section">
    <h2>Comments</h2>


    @if (Model.Comments.Count == 0)
    {
        <p>No comments yet.</p>
    }
    else
    {
        foreach (var comment in Model.Comments)
        {
            {
                var stringDate = comment.CreatedOn;
                var date = DateTime.Parse(stringDate).Hour;
                var now = DateTime.Now.Hour;


                <div class="comment">
                    @if (comment.IsEdited)
                    {
                        <span class="edited-label">(edited)</span>
                    }
                    <p class="text">@comment.Content</p>
                    <span class="comment-author">Posted by @comment.User</span>
            @if (User.Identity.IsAuthenticated && comment.UserId == Model.CurrUser)
                {
                <form class="edit-form" data-comment-id="@comment.Id" style="display:none;">
                    <textarea class="comment-content" asp-for="@Model.CommentContent" rows="3"></textarea>
                    <span asp-validation-for="@Model.CommentContent" class="text-danger"></span>
                    <button type="button" class="cancel-button">Cancel</button>
                    <button type="button" class="save-button">Save</button>
                </form>
                    <a class="edit-button" data-comment-id="@comment.Id">Edit</a>
                    <form method="post" asp-controller="Comment"
                        asp-action="Delete"
                        asp-route-id="@comment.Id",
                        asp-route-jokeId="@Model.Id"
                        asp-route-title="@Model.Title"
                        asp-route-page="@Model.CurrentPage">

                        <button type="submit" class="delete-comment-button">Delete</button>
                    </form>
                }
                </div>
            }
        }
    }
  
    @if (!Model.HasUserCommented)
    {
        <form method="post" asp-controller="Comment"
          asp-action="AddComment"
          asp-route-title="@Model.Title"
          asp-route-page="@Model.CurrentPage">

            <h3>Add a Comment</h3>
            <textarea class="form-control" asp-for="@Model.CommentContent" rows="3"></textarea>
            <span asp-validation-for="@Model.CommentContent" class="text-danger"></span>
            <button type="submit" class="comment-button">Post Comment</button>
        </form>
    }
    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        var maxPage = Math.Ceiling((double)Model.TotalComments /
        Model.PageSize);
    }

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Comments.Any();
    }

    <div class="left">
        <a class="arrow-box@(Model.CurrentPage == 1 ? "-disabled" : string.Empty)"
           asp-controller="Joke"
           asp-action="Details"
           asp-route-page="@previousPage">
            <span class="arrow button-left">
                &larr;
            </span>
        </a>
    </div>


    <div class="right">
        <a class="arrow-box@(shouldButtonBeDisabled ? "-disabled" : string.Empty)"
           asp-controller="Joke"
           asp-action="Details"
           asp-route-page="@(Model.CurrentPage + 1)">
            <span class="arrow button-right">
                &rarr;
            </span>
        </a>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $(".cancel-button").on("click", function () {
            const commentId = $(this).closest(".edit-form").data("comment-id");
            const editButton = $(".edit-button[data-comment-id='" + commentId + "']");
            const editForm = $(".edit-form[data-comment-id='" + commentId + "']");


            editButton.show();
            editForm.hide();
        });
    });

    $(document).ready(function () {
        $(".edit-button").on("click", function () {
            const target = event.target;
            const commentId = $(this).data("comment-id"); 
            const editForm = $(this).closest(".comment-section").find(".edit-form");
            const saveButton = document.querySelector('.save-button');

            const commentContainer = document.querySelector('.comment');
            const commentElement = target.closest('.comment');
            const commentTextElement = commentElement.querySelector('.text');

            const oldText = commentElement.querySelector(".text").textContent;
            const editContent = commentContainer.querySelector(".comment-content");
            if (target.classList.contains('edit-button') || target.classList.contains('delete-button')) {

                $(this).hide();

                const commentElement = target.closest('.comment');
                const commentTextElement = commentElement.querySelector('.text');

                editForm.find("textarea").val(commentTextElement.textContent).focus();
                editForm.show();
                function updateSaveButtonState() {
                    const hasChanges = commentTextElement.textContent !== editContent.value;

                    if (hasChanges) {
                        saveButton.disabled = false;
                        saveButton.classList.remove('disabled');
                    } else {
                        saveButton.disabled = true;
                        saveButton.classList.add('disabled');

                    }
                }

                // Call the function initially
                updateSaveButtonState();

                // Attach an input event listener to the textarea to enable/disable the save button dynamically
                editContent.addEventListener('input', updateSaveButtonState);
            }

        });
    });

    $(document).ready(function () {
        $(".save-button").on("click", function () {

            const commentId = $(this).closest(".edit-form").data("comment-id");
            const commentTextarea = document.querySelector('.comment-content');
            const commentElement = document.querySelector('.page');

            const commentContainer = document.querySelector('.comment');
            const target = event.target;
            const commentContent = commentTextarea.value;

            const editForm = $(this).closest(".comment-section").find(".edit-form");

            const ajaxUrl = "https://localhost:7085/api/content/" + commentId;
            $.ajax({
                url: ajaxUrl,
                type: "PUT",
                contentType: "application/json",
                data: JSON.stringify(commentContent),
                success: function (response) {
                    if (response.success) {
                        const commentElement = target.closest('.comment');
                        const hasSpanClass = commentElement.querySelector("span");

                        if(!hasSpanClass){
                            const editedSpan = document.createElement('span');
                            editedSpan.classList.add('edited-label');
                            editedSpan.textContent = '(edited)';

                            commentElement.prepend(editedSpan);
                        }

                        const commentTextElement = commentElement.querySelector('.text');

                        const commentTextarea = document.querySelector('.comment-content');

                        const text = commentElement.querySelector(".text");
                        commentTextElement.textContent = commentTextarea.value;

                        editForm.hide();
                        var editButton = $(".edit-button[data-comment-id='" + commentId + "']");
                        editButton.show();
                    } else {
                        console.log(response.errorMessage);
                    }
                },
                error: function () {
                    console.log("Failed");
                }
            });
        });
    });
</script>