@model JokeDetailsViewModel

@{
    ViewBag.Title = "Joke Details";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<style>
    .container {
        position: relative;
        width: 400px;
        height: auto;
        left: 750px;
        top: 200px;
        left: 200px;
        background-color: #f2f2f2;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
    }

        .container:hover {
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .container textarea {
            resize: none; /* Prevent resizing of the textarea */
        }

    .details-button {
        position: absolute;
        bottom: 20px;
        right: 20px;
        padding: 8px 16px;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .container:hover .details-button {
        opacity: 1;
    }

    .joke-container {
        max-width: 500px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f2f2f2;
        border-radius: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    h2 {
        font-size: 24px;
        margin-bottom: 10px;
    }

    .setup {
        font-weight: bold;
        margin-bottom: 10px;
    }

    .punchline {
        font-style: italic;
        margin-bottom: 20px;
    }

    button {
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        font-size: 14px;
        cursor: pointer;
    }

    .edit-button {
        background-color: #2196F3;
        color: white;
        margin-right: 10px;
    }

    .delete-button {
        background-color: #ff4b2b;
        color: white;
    }

    .like-button {
        background-color: #4CAF50;
        color: white;
    }

        .like-button:hover{
            background-color: #ff4b2b;
        }

    .dislike-button {
        background-color: #ff4b2b;
        color: white;
    }

        .dislike-button:hover {
            background-color: #4CAF50;
            color: white;
        }

    .likes {
        position: absolute;
        top: 10px;
        left: 330px;
        bottom: 90px;
        display: flex;
        align-items: center;
    }

        .likes i {
            color: #FF0000;
            margin-right: 5px;
        }

    .likes-count {
        font-size: 14px;
    }

    .button-right {
        opacity: 1 ;
    }
        .button-right-disable {
            opacity: 0;
        }
</style>

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="joke-container">
    <div class="likes">
        <i class="fas fa-heart"></i>
        <span class="likes-count">@Model.LikesCount</span>
    </div>
        <h2>@Model.Title</h2>
    <p class="setup">@Model.Setup</p>
    <p class="punchline">@Model.Punchline</p>

    @if (User.Identity.IsAuthenticated && User.Identity.Name == Model.OwnerName)
    {
        <a class="edit-button" asp-controller="Joke" asp-action="Edit"
       asp-route-id="@Model.Id">Edit</a>
        <a class="delete-button" asp-controller="Joke" asp-action="Delete"
       asp-route-id="@Model.Id">Delete</a>
    }
    else
    {
        if (Model.hasLiked)
        {
            <form method="post" asp-controller="Joke" 
                                asp-action="Dislike"
                                asp-route-id="@Model.Id"
                                asp-route-title="@Model.Title"
                                asp-route-page="@Model.CurrentPage">

                <button type="submit" class="dislike-button">Just Kidding</button>
            </form>
        }
        else
        {
            <form method="post" asp-controller="Joke" 
                                asp-action="Like" 
                                asp-route-id="@Model.Id" 
                                asp-route-title="@Model.Title">

                <button type="submit" class="like-button">Like</button>
            </form>

        }
    }
</div>

<div class="comment-section">
    <h2>Comments</h2>



    @if (Model.Comments.Count == 0)
    {
        <p>No comments yet.</p>
    }
    else
    {
        foreach (var comment in Model.Comments)
        {
            {
                // Declare variables within the foreach loop
                var stringDate = comment.CreatedOn;
                var date = DateTime.Parse(stringDate).Hour;
                var now = DateTime.Now.Hour;

                if (date > 24)
                {
                    <div class="comment">
                        <p>@comment.Content</p>
                        <span class="comment-author">Posted by @comment.User on @comment.CreatedOn</span>
                    </div>
                }
                else
                {
                    <div class="comment">
                        <p>@comment.Content</p>
                        <span class="comment-author">Posted by @comment.User @now hours ago</span>
                    </div>
                    
                }
            }
        }
    }

    <form method="post" asp-controller="Joke" asp-action="AddComment" asp-route-title="@Model.Title">
        <h3>Add a Comment</h3>
        <textarea class="form-control" asp-for="@Model.CommentContent" rows="5"></textarea>
        <span asp-validation-for="@Model.CommentContent" class="text-danger"></span>
        <button type="submit" class="btn btn-primary">Post Comment</button>
    </form>
</div>
<div class="pagination">
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        if (i == Model.CurrentPage)
        {
            <span class="current-page">@i</span>
        }
        else
        {
            <a href="/Joke/Details/@Model.Title/@i">@i</a>
        }
    }
</div>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalComments /
    Model.PageSize);
}

@{
    var prevPageButtonStatus = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
    !Model.Comments.Any();
}

<div>
    <div class="left">
        <a class="button-left@(Model.CurrentPage == 1 ? "-disabled" : string.Empty)"
           asp-controller="Joke"
           asp-action="Details"
           asp-route-page="@previousPage"><<</a>
    </div>

    <div class="right">
        <a class="button-right@(shouldButtonBeDisabled ? "-disabled" : string.Empty)"
           asp-controller="Joke"
           asp-action="Details"
           asp-route-page="@(Model.CurrentPage + 1)">-></a>
    </div>


</div>