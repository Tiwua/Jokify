@model AllJokesQueryModel

@{
    ViewBag.Title = "All Jokes";
}

<link href="~/css/all-jokes.css" rel="stylesheet" />
<link href="~/css/background.css" rel="stylesheet" />

<h1 class="centered-lowered-div">@ViewData["Title"]</h1>

<head>
</head>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalJokesCount /
    Model.JokesPerPage);
}

@{
    var prevPageButtonStatus = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
    !Model.Jokes.Any();
}



<body>
    @if (!Model.Jokes.Any())
    {
        <h2 class="text-center">No jokes found by the given criteria!</h2>
    }

    <div class="jokes-container">
        @foreach (var joke in Model.Jokes)
        {
            <partial name="_JokePartial" model="@joke" />
        }
    </div>

    <div>
        <div class="left">
            <a class="button-left@(Model.CurrentPage == 1 ? "-disabled" : string.Empty)"
               asp-controller="Joke"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)"></a>
        </div>

        <div class="right">
            <a class="button-right@(shouldButtonBeDisabled ? "-disabled" : string.Empty)"
               asp-controller="Joke"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)"></a>
        </div>

    </div>
    <div>

        <form method="get">

            <div class="search-bar">

                <input class="search-input" asp-for="SearchTerm" placeholder="Find a joke">
                <button type="submit" class="search-button">
                    <span class="search-icon">&#128269;</span>
                </button>
            </div>
            @if (Model.CurrentPage == 1)
            {

                <div class="dropdown">

                    <div class="dropdown-content">
                        <select class="sortDropdown" asp-for="Sorting">
                            <option value="0">Popular</option>
                            <option value="1">Least Popular</option>
                            <option value="2">Title</option>

                        </select>
                    </div>
                </div>

               
            }
                    <div class="dropdown-categories">
                        <div class="dropdown-content-categories">
                            <select class="sortDropdown-categories" asp-for="Category">
                                <option value="">All</option>
                                @foreach (var category in Model.Categories)
                                {
                                    <option value="@category">@category</option>
                                }
                            </select>
                    </div>
                </div>
        </form>
    </div>
</body>

<script>

    function updateJokes(sorting) {
        const sortDropdown = document.getElementsByClassName("sortDropdown");

        const buttonRight = document.querySelector(".button-right");
        // Change the selected value to "1" (Least Popular)
        // Get the selected value from the dropdown
        const newSortingValue = sortDropdown.Sorting.value;

        // Get the current href of the anchor tag
        const currentHref = buttonRight.getAttribute("href");

        // Update the sorting value in the href with the new sorting value
        const newHref = currentHref.replace(/sorting=\d+/, 'sorting=' + newSortingValue);

        // Set the updated href back to the anchor tag
        buttonRight.setAttribute("href", newHref);


        $.ajax({
            type: "GET",
            url: "https://localhost:7085/api/sort/" + sorting,
            success: function (result) {

                var jokesHtml = '';
                $.each(result, function (index, result) {

                    jokesHtml += '<div class="joke-box">';
                    if (result.isEdited) {
                        jokesHtml += '<span class="edited-label">(edited)</span>';
                    }
                    jokesHtml += '<h2>' + result.title + '</h2>';
                    jokesHtml += '<p class="joke-startup">' + result.setup + '</p>';
                    jokesHtml += '<p class="joke-punchline">' + result.punchline + '</p>';
                    jokesHtml += '<a class="details-button" href="/Joke/Details/' + encodeURIComponent(result.title) + '/1">Details</a>';
                    jokesHtml += '</div>';
                });
                $(".jokes-container").html(jokesHtml);
            },
            error: function () {
                alert("Error while fetching jokes.");
            }
        });
    }

    // Event handler for the dropdown menu change event
    $(document).on("change", ".sortDropdown", function () {
        var selectedSorting = $(this).val();
        updateJokes(selectedSorting);


        // Add event listener to the sorting dropdown to dynamically update the anchor tag URL


    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}