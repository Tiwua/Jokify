@model AllJokesQueryModel

@{
    ViewBag.Title = "All Jokes";
}
@section Styles{

    <style>
        .button-left[disabled] {
            border: 1px solid #999999;
            background-color: #cccccc;
            color: #666666;
        }

        .search-bar {
            display: flex;
            align-items: center;
            width: 300px;
            height: 40px;
            border: 2px solid gray;
            border-radius: 20px;
            overflow: hidden;
            position: fixed;
            bottom: 720px;
            left: 360px;
        }

        .search-input {
            flex-grow: 1;
            width: 100%;
            height: 100%;
            padding: 0 10px;
            border: none;
            outline: none;
            font-size: 16px;
        }

        .search-button {
            width: 40px;
            height: 100%;
            background-color: lightgray;
            border: none;
            border-radius: 0 20px 20px 0;
            cursor: pointer;
        }

            .search-button:hover {
                background-color: gray;
            }

        .search-icon {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
            color: white;
            font-size: 18px;
        }
    </style>
    <link href="~/css/all-jokes.css" rel="stylesheet" />

}

<h1 class="centered-lowered-div">@ViewData["Title"]</h1>

<head>

</head>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalJokesCount /
    Model.JokesPerPage);
}

@{
    var prevPageButtonStatus = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
    !Model.Jokes.Any();
}



<body>
    @*
    <div class="row">
    <div class="form-group col-md-3 d-flex justify-content-between">
    <div class="form-group">
    <label asp-for="Category"></label>
    <select asp-for="Category" class="form-control">
    <option value="">All</option>
    @foreach (var category in Model.Categories)
    {
    <option value="@category">@category</option>
    }
    </select>
    </div>
    </div>
    </div>
    *@




    <select id="sortDropdown" asp-for="Sorting">
        <option value="0">Popular</option>
        <option value="1">Least Popular</option>
        <option value="2">Title</option>
    </select>


    @if (!Model.Jokes.Any())
    {
        <h2 class="text-center">No jokes found by the given criteria!</h2>
    }

    <div class="jokes-container">
        @foreach (var entity in Model.Jokes)
        {
            <div class="joke-box">
                <h2>@entity.Title</h2>
                <p class="joke-startup">@entity.Setup</p>
                <p class="joke-punchline">@entity.Punchline</p>
            </div>
        }
    </div>

    <div>
        <div class="left">
            <a class="button-left@(Model.CurrentPage == 1 ? "-disabled" : string.Empty)"
               asp-controller="Joke"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)"></a>
        </div>

        <div class="right">
            <a class="button-right@(shouldButtonBeDisabled ? "-disabled" : string.Empty)"
               asp-controller="Joke"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)"></a>
        </div>


    </div>

    <form method="get">
        <div class="search-bar">
            <input class="search-input" asp-for="SearchTerm" placeholder="Find a joke">
            <button type="submit" class="search-button">
                <span class="search-icon">&#128269;</span>
            </button>
        </div>
         
    </form>
</body>

<script>
    document.getElementById("sortDropdown").addEventListener("change", function () {
        var selectedOption = this.value;

        if (selectedOption) {
            // Perform AJAX request to load the sorted entities
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    var entityContent = xhr.responseText;
                    document.getElementsByClassName("joke-box").innerHTML = entityContent;
                }
            };
            xhr.open("GET", "/Joke/All/SortEntities?option=" + selectedOption, true);
            xhr.send();
        } else {
            document.getElementByClassName("joke-box").innerHTML = "";
        }
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}