@model AllJokesQueryModel

@{
    ViewBag.Title = "All Jokes";
}
@section Styles{
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="~/css/all-jokes.css" rel="stylesheet" />

    <style>


        .search-bar {
            display: flex;
            align-items: center;
            width: 300px;
            height: 40px;
            border: 2px solid gray;
            border-radius: 20px;
            overflow: hidden;
            position: relative;
            top: 150px;
        }

        .search-input {
            flex-grow: 1;
            width: 100%;
            height: 100%;
            padding: 0 10px;
            border: none;
            outline: none;
            font-size: 16px;
        }

        .search-button {
            width: 40px;
            height: 100%;
            background-color: lightgray;
            border: none;
            border-radius: 0 20px 20px 0;
            cursor: pointer;
        }

            .search-button:hover {
                background-color: gray;
            }

        .search-icon {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
            color: white;
            font-size: 18px;
        }
    </style>
}

<h1 class="centered-lowered-div">@ViewData["Title"]</h1>

<form method="get">
    <div class="row">
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Category"></label>
                <select asp-for="Category" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.Categories)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Lowest price first</option>
                    <option value="2">Not rented first</option>
                </select>
            </div>
        </div>

        <div class="search-bar">
            <input type="text" class="search-input" placeholder="Search">
            <button type="submit" class="search-button">
                <span class="search-icon">&#128269;</span>
            </button>
        </div>
    </div>
</form>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalJokesCount /
        AllJokesQueryModel.JokesPerPage);
}
    @{
        var prevPageButtonStatus = Model.CurrentPage == 1 ? "disabled" : string.Empty;
        var nextPageButtonStatus = Model.CurrentPage == maxPage ||
        !Model.Jokes.Any();
    }

<div>
    <div>
        <a class="arrow-button-left @prevPageButtonStatus"
           asp-controller="Joke"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"></a>
    </div>
    <div>
        <a class="arrow-button-right
           @(nextPageButtonStatus ? "disabled" : string.Empty)"
           asp-controller="Joke"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Category"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"></a>
    </div>
</div>

@if (!Model.Jokes.Any())
{
    <h2 class="text-center">No jokes found by the given criteria!</h2>
}
<div class="jokes-container">
    <div class="hero-in">
        @foreach (var entity in Model.Jokes)
        {
        <div class="joke-box">
            <h2>@entity.Title</h2>
            <p class="joke-startup">@entity.Setup</p>
            <p class="joke-punchline">@entity.Punchline</p>
        </div>
        }
    </div>
 </div>



@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}